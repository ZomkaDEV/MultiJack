name: Build MultiJack

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run build.py (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          source .venv/bin/activate
          python build.py

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          python -m venv .venv
          .\.venv\Scripts\Activate.ps1
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run build.py (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          .\.venv\Scripts\Activate.ps1
          python build.py

      - name: Upload Linux artifact (.tar.gz)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: Linux-Build
          path: dist/MultiJack*.tar.gz

      - name: Upload macOS artifact (.dmg)
        if: matrix.os == 'macos-13'
        uses: actions/upload-artifact@v4
        with:
          name: macOS-Build
          path: MultiJack*.dmg

      - name: Upload Windows artifact (.exe)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: Windows-Build
          path: Output\MultiJack*.exe
